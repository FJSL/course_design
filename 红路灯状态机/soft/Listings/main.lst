C51 COMPILER V9.55   MAIN                                                                  01/09/2017 20:22:40 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND P
                    -RINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          
   3          #define ON  0
   4          #define OFF 1
   5          
   6          char red_delay = 11;   // 红灯延迟
   7          char green_delay = 7;
   8          char yellow_delay = 3;
   9          
  10          
  11          
  12          // 定时器0 初始化
  13          void timer0_init();
  14          // 按键扫描
  15          void key_scan();
  16          // 更新红绿灯
  17          void update_LED();
  18          // 关闭所有的灯
  19          void emergency_fun();
  20          // 显示剩余时间
  21          void show_time(void);
  22          // 初始化引脚 全部拉低
  23          void init_pin(void);
  24          // 设置函数
  25          void setting_fun(void);
  26          
  27          
  28          // 引脚定义
  29          // 紧急按钮
  30          sbit key_eme     = P1^2;
  31          sbit key_setting = P1^3;
  32          sbit key_add     = P1^4;
  33          sbit key_sub     = P1^5;
  34          
  35          sbit car_left_ew   = P3^0;
  36          sbit car_red_ew    = P3^1;
  37          sbit car_yellow_ew = P3^2;
  38          sbit car_green_ew  = P3^3;
  39          sbit car_right_ew  = P3^4;
  40          
  41          sbit car_left_sn   = P3^5;
  42          sbit car_red_sn    = P3^6;
  43          sbit car_yellow_sn = P3^7;
  44          sbit car_green_sn  = P1^0;
  45          sbit car_right_sn  = P1^1;
  46          
  47          
  48          sbit peo_green  = P2^7;
  49          sbit peo_red    = P2^6;  
  50          
  51          
  52          // 数码管
  53          sbit car_lock_high = P2^2;
  54          sbit car_lock_low  = P2^3; 
C51 COMPILER V9.55   MAIN                                                                  01/09/2017 20:22:40 PAGE 2   

  55          
  56          sbit car_lock_high_sn = P2^4;
  57          sbit car_lock_low_sn  = P2^5;
  58           
  59          sbit peo_lock_high = P2^0;
  60          sbit peo_lock_low  = P2^1;  
  61          
  62          unsigned char time_ew ;   // 秒
  63          unsigned char time_sn ;
  64          unsigned char peo_time;
  65          //                                0     1   2    3    4    5   6    7    8      9
  66          const unsigned char code duan[]={0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80, 0x90};
  67          // 0 1 人行道   2 3  东西车道
  68          unsigned char time_array[6] ={0};
  69          
  70          typedef enum 
  71          {
  72              red,
  73              yellow,
  74              green, 
  75              emergency, // 紧急境况
  76              setting,   // 设置状态
  77          } LedState;
  78          
  79          LedState state,state1;
  80          
  81          char setState = -1;  // 0 red 1 green 2 yellow 3 right
  82          
  83          void main(void)
  84          {
  85   1          init_pin();
  86   1          state = red;    // 默认是红灯
  87   1          state1 = green;
  88   1          time_ew   = red_delay ;   // 秒
  89   1          time_sn   = green_delay;
  90   1          peo_time  = red_delay ;    
  91   1      
  92   1          car_right_ew = 0;  // 右转灯常亮
  93   1          car_right_sn = 0;
  94   1          // 初始化定时器0 定时50ms 
  95   1          timer0_init();
  96   1          
  97   1          while(1)
  98   1          {
  99   2           // 扫描按键
 100   2           key_scan();
 101   2           // 更新LED
 102   2           update_LED();
 103   2           // 显示剩余时间 
 104   2           show_time();
 105   2          }   
 106   1      }
 107          
 108          void key_scan()
 109          {   
 110   1          static char key_eme_flag = 0,key_flag = 0;
 111   1          // 紧急境况 
 112   1          if(key_eme == 0)  
 113   1             key_eme_flag = 1;
 114   1          else if( key_eme_flag == 1){
 115   2              key_eme_flag = 0;
 116   2              // 如果当前状态是 紧急或者设置状态  则退出当前状态 进入红绿灯状态
C51 COMPILER V9.55   MAIN                                                                  01/09/2017 20:22:40 PAGE 3   

 117   2              if(state == emergency || state == setting)
 118   2              {
 119   3                state    = red;          // 恢复为红灯状态
 120   3                time_ew  = red_delay ;   // 秒
 121   3                peo_time = red_delay ; 
 122   3              }
 123   2              else{
 124   3                  state  = emergency;  
 125   3                  state1 = emergency;
 126   3              }            
 127   2          }
 128   1          if(key_setting == 0)      // 状态机
 129   1              key_flag = 1;
 130   1          else if(key_flag == 1)
 131   1          {
 132   2             key_flag = 0;
 133   2             if(state == setting) 
 134   2             {  
 135   3               if( setState++ >= 3) setState = 0;
 136   3             }
 137   2             else // 如果不是设置状态 进入设置状态
 138   2             {
 139   3                state = setting; 
 140   3                setState = 0; // 默认第一个设置是红灯
 141   3              }
 142   2          }
 143   1      }
 144          
 145          
 146          void show_time(void)
 147          {
 148   1        static unsigned char i =0;  // 状态延时
 149   1        static unsigned char state = 0; // 数码管扫描
 150   1        if( i++ >= 100)
 151   1        { 
 152   2          i=0;
 153   2          if(state == 0)
 154   2          if(peo_time>=0 && peo_time <= 99 ){
 155   3              time_array[0] = peo_time/10;
 156   3              time_array[1] = peo_time%10;
 157   3          }
 158   2          if(state ==2)
 159   2          if(time_ew>=0 && time_ew <= 99 ){
 160   3              time_array[2] = time_ew/10;
 161   3              time_array[3] = time_ew%10;      
 162   3           }
 163   2          if(state == 4)
 164   2          if(time_sn >=0 && time_sn <=99 )
 165   2          {
 166   3              time_array[4] = time_sn/10;
 167   3              time_array[5] = time_sn%10;
 168   3          }
 169   2          P0 = 0xFF; // 清屏
 170   2          switch(state)
 171   2          {
 172   3              case 0: peo_lock_high    = 1; car_lock_low_sn  = 0;
 173   3                  break;
 174   3              case 1: peo_lock_low     = 1; peo_lock_high    = 0;
 175   3                  break; 
 176   3              case 2: car_lock_high    = 1; peo_lock_low     = 0;
 177   3                  break;
 178   3              case 3: car_lock_low     = 1; car_lock_high    = 0;
C51 COMPILER V9.55   MAIN                                                                  01/09/2017 20:22:40 PAGE 4   

 179   3                  break; 
 180   3              case 4: car_lock_high_sn = 1; car_lock_low     = 0;
 181   3                  break;
 182   3              case 5: car_lock_low_sn  = 1; car_lock_high_sn = 0; 
 183   3                  break; 
 184   3          }
 185   2          P0 = duan[time_array[state++]];   
 186   2          if((state)>=6) state = 0;
 187   2        }   
 188   1      }
 189          
 190          // 更新led灯
 191          void update_LED()
 192          {   
 193   1          switch(state)
 194   1          {
 195   2              case red:
 196   2                  car_red_ew    = ON;  // 车 红灯
 197   2                  car_green_ew  = OFF;
 198   2                  car_yellow_ew = OFF;
 199   2                  car_left_ew   = OFF;
 200   2        
 201   2                  peo_green  = ON;      // 人行道 绿灯
 202   2                  peo_red    = OFF; 
 203   2                  break;
 204   2              case green : 
 205   2                  car_red_ew    = OFF;  // 车 红灯
 206   2                  car_green_ew  = ON;
 207   2                  car_yellow_ew = OFF;
 208   2                  car_left_ew   = ON;
 209   2      
 210   2                  peo_green  = OFF;     // 人行道 绿灯
 211   2                  peo_red    = ON; 
 212   2                  break;
 213   2              case yellow:
 214   2                  car_red_ew    = OFF;  // 车 黄灯
 215   2                  car_green_ew  = OFF;
 216   2                  car_yellow_ew = ON;
 217   2                  car_left_ew   = OFF;
 218   2                  
 219   2                  peo_green  = OFF;  // 人行道 绿灯
 220   2                  peo_red = ON; 
 221   2                  break;
 222   2      
 223   2              case emergency:    // 紧急情况下全部灯不亮
 224   2                   emergency_fun();
 225   2                  break;
 226   2              case setting:  
 227   2                  // 什么都不做 交给setting_fun做
 228   2                  setting_fun();
 229   2                  break;
 230   2          }
 231   1          switch(state1)
 232   1          {
 233   2              case red: 
 234   2                  car_red_sn    = ON;  // 南北 绿灯
 235   2                  car_green_sn  = OFF;
 236   2                  car_yellow_sn = OFF;
 237   2                  car_left_sn   = OFF;
 238   2                  
 239   2      //            peo_green  = ON;      // 人行道 绿灯
 240   2      //            peo_red    = OFF; 
C51 COMPILER V9.55   MAIN                                                                  01/09/2017 20:22:40 PAGE 5   

 241   2                  break;
 242   2              case green : 
 243   2                  car_red_sn    = OFF;  // 南北 绿灯
 244   2                  car_green_sn  = ON;
 245   2                  car_yellow_sn = OFF;
 246   2                  car_left_sn   = ON;
 247   2                  
 248   2      //            peo_green  = OFF;     // 人行道 绿灯
 249   2      //            peo_red    = ON; 
 250   2                  break;
 251   2              case yellow:
 252   2            
 253   2                  car_red_sn    = OFF;  // 南北 绿灯
 254   2                  car_green_sn  = OFF;
 255   2                  car_yellow_sn = ON;
 256   2                  car_left_sn   = OFF;
 257   2                  
 258   2      //            peo_green  = OFF;  // 人行道 绿灯
 259   2      //            peo_red = ON; 
 260   2                  break;
 261   2                case emergency:    // 紧急情况下全部灯不亮
 262   2                   emergency_fun();
 263   2          }
 264   1      }
 265          
 266          void setting_fun(void)
 267          {
 268   1          static char key_add_flag = 0;
 269   1          static char key_sub_flag = 0;
 270   1          switch(setState)
 271   1          {
 272   2              case 0:
 273   2                  car_red_ew    = ON;  // 红灯设置状态   红灯亮
 274   2                  car_green_ew  = OFF;
 275   2                  car_yellow_ew = OFF;
 276   2                  car_left_ew   = OFF; 
 277   2                  if(key_add == 0 )
 278   2                      key_add_flag = 1;
 279   2                  else if(key_add_flag == 1)
 280   2                  {
 281   3                    key_add_flag = 0;
 282   3                    if(red_delay++ >= 99) red_delay = 0;
 283   3                  }
 284   2                  if(key_sub == 0 )
 285   2                      key_sub_flag =1;
 286   2                  else if(key_sub_flag ==1)
 287   2                  {
 288   3                      key_sub_flag = 0;
 289   3                      if(red_delay-- <=0) red_delay = 99;
 290   3                  }
 291   2                  time_ew = red_delay;
 292   2                  peo_time = red_delay;
 293   2                  break;
 294   2              case 1:
 295   2                  car_red_ew    = OFF;  // 绿灯设置状态   绿灯亮
 296   2                  car_green_ew  = ON;
 297   2                  car_yellow_ew = OFF;
 298   2                  car_left_ew   = OFF; 
 299   2                  if(key_add == 0 )
 300   2                      key_add_flag = 1;
 301   2                  else if(key_add_flag == 1)
 302   2                  {
C51 COMPILER V9.55   MAIN                                                                  01/09/2017 20:22:40 PAGE 6   

 303   3                    key_add_flag = 0;  
 304   3                    if(green_delay++ >= 99) green_delay = 0;
 305   3                  }
 306   2                  if(key_sub == 0)
 307   2                      key_sub_flag = 1;
 308   2                  else if(key_sub_flag ==1)
 309   2                  {
 310   3                      key_sub_flag = 0;
 311   3                      if(green_delay-- <=0) green_delay = 99;
 312   3                  }
 313   2                  time_ew = green_delay;
 314   2                  peo_time = green_delay;
 315   2                  break;
 316   2              case 2:
 317   2                  car_red_ew    = OFF;  // 黄灯设置状态   黄灯亮
 318   2                  car_green_ew  = OFF;
 319   2                  car_yellow_ew = ON;
 320   2                  car_left_ew   = OFF; 
 321   2                  if(key_add == 0 )
 322   2                      key_add_flag = 1;
 323   2                  else if(key_add_flag == 1)
 324   2                  {
 325   3                    key_add_flag = 0;
 326   3                    if(yellow_delay++ >= 99) yellow_delay = 0;
 327   3                  }
 328   2                  if(key_sub == 0)
 329   2                      key_sub_flag = 1;
 330   2                  else if(key_sub_flag ==1)
 331   2                  {
 332   3                      key_sub_flag = 0;
 333   3                      if(yellow_delay-- <=0) yellow_delay = 99;
 334   3                  }
 335   2                  time_ew = yellow_delay;
 336   2                  peo_time = yellow_delay;
 337   2                  break;
 338   2              case 3:
 339   2                  car_red_ew    = OFF;  // 左转设置状态   左转灯亮
 340   2                  car_green_ew  = OFF;
 341   2                  car_yellow_ew = OFF;
 342   2                  car_left_ew   = ON; 
 343   2      //            if(key_add == 0 )
 344   2      //                key_flag = 1;
 345   2      //            else if(key_flag == 1)
 346   2      //            {
 347   2      //              key_flag = 0;
 348   2      //              if(yellow_delay++ >= 99) yellow_delay = 0;
 349   2      //            }
 350   2      //            time_ew = yellow_delay;
 351   2      //            peo_time = yellow_delay;
 352   2                  break;
 353   2          }
 354   1      }
 355          
 356          void init_pin(void)
 357          {
 358   1          // 数码管
 359   1          car_lock_high = 0;
 360   1          car_lock_low  = 0; 
 361   1      
 362   1          car_lock_high_sn = 0;
 363   1          car_lock_low_sn  = 0;
 364   1       
C51 COMPILER V9.55   MAIN                                                                  01/09/2017 20:22:40 PAGE 7   

 365   1          peo_lock_high = 0;
 366   1          peo_lock_low  = 0;  
 367   1      
 368   1      }
 369          
 370          void emergency_fun()
 371          {
 372   1          car_left_ew   = OFF;
 373   1          car_red_ew    = ON;
 374   1          car_green_ew  = OFF;
 375   1          car_yellow_ew = OFF;
 376   1          car_right_ew  = OFF;
 377   1      
 378   1          car_left_sn   = OFF;
 379   1          car_red_sn    = ON;
 380   1          car_green_sn  = OFF;
 381   1          car_yellow_sn = OFF;
 382   1          car_right_sn  = OFF;
 383   1      
 384   1          
 385   1          peo_green  = OFF;
 386   1          peo_red    = ON;
 387   1       
 388   1          car_lock_high = 1 ;
 389   1          car_lock_low  = 1 ; 
 390   1          peo_lock_high = 1 ;
 391   1          peo_lock_low  = 1 ;
 392   1          P0 = 0xBF;
 393   1      }
 394          
 395          
 396          void state_change()
 397          {
 398   1          peo_time--;
 399   1          switch(state)
 400   1          {
 401   2              case red:
 402   2                  if(time_ew-- == 0) 
 403   2                  { 
 404   3                      state  = green;   // 转到green 状态
 405   3                      time_ew = green_delay;
 406   3                      peo_time  = yellow_delay+ green_delay + 1 ;           
 407   3                  }
 408   2                  break;
 409   2              case green: 
 410   2                  if(time_ew-- == 0) // 绿灯20s
 411   2                  {
 412   3                      state = yellow;
 413   3                      time_ew = yellow_delay; 
 414   3                  }
 415   2                  break;
 416   2              case yellow: 
 417   2                  if(time_ew-- == 0)
 418   2                  {
 419   3                      state = red;
 420   3                      time_ew = red_delay;
 421   3                      peo_time  = red_delay;
 422   3                  }
 423   2                  break;
 424   2          }
 425   1          switch(state1)
 426   1          {
C51 COMPILER V9.55   MAIN                                                                  01/09/2017 20:22:40 PAGE 8   

 427   2              case red:
 428   2                  if(time_sn-- == 0) 
 429   2                  { 
 430   3                      state1  = green;   // 转到green 状态
 431   3                      time_sn = green_delay;            
 432   3                  }
 433   2                  break;
 434   2              case green: 
 435   2                  if(time_sn-- == 0) // 绿灯20s
 436   2                  {
 437   3                      state1 = yellow;
 438   3                      time_sn = yellow_delay; 
 439   3                  }
 440   2                  break;
 441   2              case yellow: 
 442   2                  if(time_sn-- == 0)
 443   2                  {
 444   3                      state1 = red;
 445   3                      time_sn = red_delay;
 446   3                  }
 447   2                  break;
 448   2          }
 449   1      }
 450          
 451          // 中断服务程序
 452          void ISR() interrupt 1      // 定时器 0    
 453          {
 454   1          // 用来计算1s的变量
 455   1          static char time = 0;
 456   1          TH0 = 65536-50000/256;
 457   1          TL0 = 65536-50000%256;  // 定时时间50ms
 458   1          if(time++ == 20)        // 一秒
 459   1          {
 460   2              time = 0;     
 461   2              state_change();      // 红路灯的状态机
 462   2             
 463   2          } 
 464   1      }
 465          
 466          void timer0_init()
 467          {
 468   1          TMOD |= 0x01;           // 16位定时器模式
 469   1          TH0 = 65536-50000/256;
 470   1          TL0 = 65536-50000%256;  // 定时时间50ms
 471   1          EA  = 1;                // 开总中断
 472   1          ET0 = 1;                // 允许定时器0中断
 473   1          TR0 = 1;                // 定时开始
 474   1      }
 475          
 476          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    921    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
